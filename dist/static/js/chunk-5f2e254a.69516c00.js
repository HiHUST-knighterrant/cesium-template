(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-5f2e254a"],{2237:function(n,t,e){"use strict";var i=e("46a7"),o=e("4162"),r=e("d2cf"),s=e("4488"),a=e("7f99"),l=e("d2b9"),u=RangeError,c=String,d=Math.floor,m=o(a),f=o("".slice),h=o(1..toFixed),g=function(n,t,e){return 0===t?e:t%2===1?g(n,t-1,e*n):g(n*n,t/2,e)},y=function(n){var t=0,e=n;while(e>=4096)t+=12,e/=4096;while(e>=2)t+=1,e/=2;return t},p=function(n,t,e){var i=-1,o=e;while(++i<6)o+=t*n[i],n[i]=o%1e7,o=d(o/1e7)},P=function(n,t){var e=6,i=0;while(--e>=0)i+=n[e],n[e]=d(i/t),i=i%t*1e7},v=function(n){var t=6,e="";while(--t>=0)if(""!==e||0===t||0!==n[t]){var i=c(n[t]);e=""===e?i:e+m("0",7-i.length)+i}return e},w=l((function(){return"0.000"!==h(8e-5,3)||"1"!==h(.9,0)||"1.25"!==h(1.255,2)||"1000000000000000128"!==h(0xde0b6b3a7640080,0)}))||!l((function(){h({})}));i({target:"Number",proto:!0,forced:w},{toFixed:function(n){var t,e,i,o,a=s(this),l=r(n),d=[0,0,0,0,0,0],h="",w="0";if(l<0||l>20)throw u("Incorrect fraction digits");if(a!=a)return"NaN";if(a<=-1e21||a>=1e21)return c(a);if(a<0&&(h="-",a=-a),a>1e-21)if(t=y(a*g(2,69,1))-69,e=t<0?a*g(2,-t,1):a/g(2,t,1),e*=4503599627370496,t=52-t,t>0){p(d,0,e),i=l;while(i>=7)p(d,1e7,0),i-=7;p(d,g(10,i,1),0),i=t-1;while(i>=23)P(d,1<<23),i-=23;P(d,1<<i),p(d,1,1),P(d,2),w=v(d)}else p(d,0,e),p(d,1<<-t,0),w=v(d)+m("0",l);return l>0?(o=w.length,w=h+(o<=l?"0."+m("0",l-o)+w:f(w,0,o-l)+"."+f(w,o-l))):w=h+w,w}})},"3c14":function(n,t,e){"use strict";e("e9ff")},4488:function(n,t,e){var i=e("4162");n.exports=i(1..valueOf)},"4bb1":function(n,t,e){"use strict";e.d(t,"a",(function(){return i}));e("a567");function i(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}},6410:function(n,t,e){"use strict";var i=e("46a7"),o=e("4162"),r=e("923b"),s=e("c68c"),a=e("f27a"),l=o([].join),u=r!=Object,c=a("join",",");i({target:"Array",proto:!0,forced:u||!c},{join:function(n){return l(s(this),void 0===n?",":n)}})},"78be":function(n,t,e){var i=e("46a7"),o=e("bc35"),r=e("5386");i({target:"Array",proto:!0},{fill:o}),r("fill")},"83f3":function(n,t,e){"use strict";e.r(t);var i=function(){var n=this,t=n.$createElement;n._self._c;return n._m(0)},o=[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"container"},[e("div",{attrs:{id:"cesiumContainer"}})])}],r=e("9e48"),s=e("c407"),a=e("896e"),l=[{codeLanguage:"VUE",relyOn:[{label:"uuid（npm）",url:"https://www.npmjs.com/package/uuid",externalLinks:!0},{label:"Entity.js",url:"cesium/Entity.js"},{label:"Utils.js",url:"cesium/Utils.js"},{label:"qiche.gltf",url:"Vue/Entity/dynamicPosition/qiche.gltf"}],code:[{codeLanguage:"html",content:'<template>\n                    <div class="container">\n                      <div id="cesiumContainer"></div>\n                    </div>\n                  </template>'},{codeLanguage:"js",content:'import Entity from "@/common/cesium/Entity.js";\n                  import Utils from "@/common/cesium/Utils.js";\n                  import { v4 as uuidv4 } from "uuid";\n                  export default {\n                    name: "dynamicPosition",\n                    data() {\n                      return {\n                        viewer: null,\n                        _Entity: null,\n                        _Utils: null,\n                        ModelEntityArr: [],\n                      };\n                    },\n                    mounted() {\n                      this.init();\n                    },\n                    methods: {\n                      init() {\n                        const Cesium = this.cesium;\n                        Cesium.Ion.defaultAccessToken = process.env.VUE_APP_TOKEN;\n                        this.viewer = new Cesium.Viewer("cesiumContainer", {\n                          imageryProvider: new Cesium.UrlTemplateImageryProvider({\n                            url: "http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}",\n                          }),\n                          terrainProvider: new Cesium.CesiumTerrainProvider({\n                            url: "http://data.marsgis.cn/terrain",\n                          }),\n                          shouldAnimate: true,\n                          timeline: true,\n                          infoBox: false,\n                          selectionIndicator: false,\n                          // sceneMode: 2,\n                          // scale: 0.1,\n                          animation: false, //隐藏动画小组件（左下角圆的控件）\n                        });\n                        //隐藏底部时间线\n                        this.viewer.timeline.container.style.display = "none";\n                        //启用使用场景的光源为地球照明\n                        this.viewer.scene.globe.enableLighting = true;\n                        //深度监听\n                        this.viewer.scene.globe.depthTestAgainstTerrain = true;\n                        //Set the random number seed for consistent results.\n                        Cesium.Math.setRandomNumberSeed(3);\n                  \n                        this._Entity = new Entity(Cesium, this.viewer);\n                        this._Utils = new Utils(Cesium, this.viewer);\n                        this.start();\n                  \n                        //相机\n                        this.viewer.camera.setView({\n                          //setView是直接跳到 flyTo// 是镜头飞行到  网速不好或者电脑配置不高 还是不要fly了吧\n                          destination: Cesium.Cartesian3.fromDegrees(\n                            123.43382736814452,\n                            41.811201240193164,\n                            3000\n                          ), //经纬度坐标转换为 笛卡尔坐标(世界坐标)\n                          orientation: {\n                            heading: Cesium.Math.toRadians(0.0), // east, default value is 0.0 (north) //东西南北朝向\n                            pitch: Cesium.Math.toRadians(-90), // default value (looking down)  //俯视仰视视觉\n                            roll: 0.0, // default value\n                          },\n                          duration: 3, //3秒到达战场\n                        });\n                      },\n                      /**\n                       * 开始\n                       */\n                      start() {\n                        const Cesium = this.cesium;\n                        let ModelEntity = [];\n                        for (let i = 0; i < 20; i++) {\n                          // 创建模型 start\n                          const createModel = this._Entity.createModel({\n                            id: uuidv4(),\n                            uri:\n                              process.env.VUE_APP_PUBLIC_URL +\n                              "/Vue/Entity/dynamicPosition/qiche.gltf",\n                            maximumScale: 100,\n                            minimumPixelSize: 30,\n                            heightReference: Cesium.HeightReference.CLAMP_TO_GROUND,\n                          });\n                          // 创建模型 end\n                          ModelEntity.push(createModel);\n                        }\n                        this.ModelEntityArr = ModelEntity;\n                        this.setPosition();\n                        setInterval(() => {\n                          this.setPosition();\n                        }, 20000);\n                      },\n                      /**\n                       * 获取随机位置\n                       */\n                      getRandomPoint() {\n                        const randomPoint = this._Utils.randomPoint({\n                          start: [123.43408676397446, 41.81120812753955],\n                          end: [123.45099649125092, 41.81138896519967],\n                          range: 100,\n                        });\n                        return randomPoint;\n                      },\n                      getCallbackProperty(startPosition, endPosition) {\n                        const Cesium = this.cesium;\n                        let factor = 0;\n                        const position = new Cesium.CallbackProperty(function (time) {\n                          if (factor > 5000) {\n                            factor = 0;\n                          }\n                          factor++;\n                          // 动态更新位置\n                          return Cesium.Cartesian3.lerp(\n                            startPosition,\n                            endPosition,\n                            factor / 500.0,\n                            new Cesium.Cartesian3()\n                          );\n                        }, false);\n                        return position;\n                      },\n                      setPosition() {\n                        const Cesium = this.cesium;\n                        // console.log(this.ModelEntityArr);\n                        for (let i = 0; i < this.ModelEntityArr.length; i++) {\n                          const item = this.ModelEntityArr[i];\n                          // console.log(getEntityPosition);\n                          //获取随机位置\n                          let startPosition = "";\n                          //判断实体位置\n                          const getEntityPosition = this._Utils.getEntityPosition(item);\n                          if (getEntityPosition) {\n                            startPosition = getEntityPosition;\n                          } else {\n                            startPosition = this.getRandomPoint();\n                          }\n                          let endPosition = this.getRandomPoint();\n                  \n                          const position = this.getCallbackProperty(startPosition, endPosition);\n                          item.position = position;\n                          item.orientation = new Cesium.VelocityOrientationProperty(position);\n                        }\n                      },\n                    },\n                  };'},{codeLanguage:"css",content:".container {\n                      width: 100%;\n                      height: 100%;\n                      #cesiumContainer {\n                        width: 100%;\n                        height: 100%;\n                      }\n                    }"}]},{codeLanguage:"JS",relyOn:[{label:"uuid.min.js",url:"JavaScript/cesium/Tripartite/uuid-js/uuid.min.js"},{label:"Entity.js",url:"JavaScript/cesium/Entity.js"},{label:"Utils.js",url:"JavaScript/cesium/Utils.js"},{label:"qiche.gltf",url:"JavaScript/Entity/dynamicPosition/qiche.gltf"}],code:[{codeLanguage:"js",content:'\n                    function dynamicPosition() {\n                      const _Utils = new Utils(Cesium,viewer)\n                      const _Entity = new Entity(Cesium, viewer);\n                      let ModelEntityArr = []\n                      //相机\n                      viewer.camera.setView({\n                          //setView是直接跳到 flyTo// 是镜头飞行到  网速不好或者电脑配置不高 还是不要fly了吧\n                          destination: Cesium.Cartesian3.fromDegrees(\n                              123.43382736814452,\n                              41.811201240193164,\n                              3000\n                          ), //经纬度坐标转换为 笛卡尔坐标(世界坐标)\n                          orientation: {\n                              heading: Cesium.Math.toRadians(0.0), // east, default value is 0.0 (north) //东西南北朝向\n                              pitch: Cesium.Math.toRadians(-90), // default value (looking down)  //俯视仰视视觉\n                              roll: 0.0, // default value\n                          },\n                          duration: 3, //3秒到达战场\n                      });\n                  \n                  \n                      let ModelEntity = [];\n                      for (let i = 0; i < 20; i++) {\n                          // 创建模型 start\n                          const createModel = _Entity.createModel({\n                              id: uuid4(),\n                              uri: "http://re8r7gk9l.hb-bkt.clouddn.com/files/qiche.gltf",\n                              maximumScale: 100,\n                              minimumPixelSize: 30,\n                              heightReference: Cesium.HeightReference.CLAMP_TO_GROUND,\n                          });\n                          // 创建模型 end\n                          ModelEntity.push(createModel);\n                      }\n                      ModelEntityArr = ModelEntity;\n                  \n                      //开始设置位置\n                      setPosition();\n                      setInterval(() => {\n                          setPosition();\n                      }, 20000);\n                  \n                      /**\n                       * 获取随机位置\n                       */\n                      function getRandomPoint() {\n                          const randomPoint = _Utils.randomPoint({\n                              start: [123.43408676397446, 41.81120812753955],\n                              end: [123.45099649125092, 41.81138896519967],\n                              range: 100,\n                          });\n                          return randomPoint;\n                      }\n                      /**\n                       * 计算移动位置\n                       */\n                      function getCallbackProperty(startPosition, endPosition) {\n                          let factor = 0;\n                          const position = new Cesium.CallbackProperty(function (time) {\n                              if (factor > 5000) {\n                                  factor = 0;\n                              }\n                              factor++;\n                              // 动态更新位置\n                              return Cesium.Cartesian3.lerp(\n                                  startPosition,\n                                  endPosition,\n                                  factor / 500.0,\n                                  new Cesium.Cartesian3()\n                              );\n                          }, false);\n                          return position;\n                      }\n                      /**\n                       * 设置位置\n                       */\n                      function setPosition() {\n                          for (let i = 0; i < ModelEntityArr.length; i++) {\n                              const item = ModelEntityArr[i];\n                              //获取随机位置\n                              let startPosition = "";\n                              //判断实体位置\n                              const getEntityPosition = _Utils.getEntityPosition(item);\n                              if (getEntityPosition) {\n                                  startPosition = getEntityPosition;\n                              } else {\n                                  startPosition = getRandomPoint();\n                              }\n                              let endPosition = getRandomPoint();\n                  \n                              const position = getCallbackProperty(startPosition, endPosition);\n                              item.position = position;\n                              item.orientation = new Cesium.VelocityOrientationProperty(position);\n                          }\n                      }\n                  }\n                  dynamicPosition()\n                  '}]}],u={name:"dynamicPosition",data:function(){return{viewer:null,_Entity:null,_Utils:null,ModelEntityArr:[]}},created:function(){this.$store.dispatch("highlight/set_code",l)},mounted:function(){this.init()},methods:{init:function(){var n=this.cesium;n.Ion.defaultAccessToken="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJlNTIzZTZiYi05OWQxLTQ0OTUtYTUzNC1mYjYxNWI4OTZiZTYiLCJpZCI6OTA3MDUsImlhdCI6MTY1MDUzNDAzMn0.0f1DG8NlExZnbrueMn_AgO6GX_g_RASavpxAWcVymPs",this.viewer=new n.Viewer("cesiumContainer",{imageryProvider:new n.UrlTemplateImageryProvider({url:"http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}"}),terrainProvider:new n.CesiumTerrainProvider({url:"http://data.marsgis.cn/terrain"}),shouldAnimate:!0,timeline:!0,infoBox:!1,selectionIndicator:!1,animation:!1}),this.viewer.timeline.container.style.display="none",this.viewer.scene.globe.enableLighting=!0,this.viewer.scene.globe.depthTestAgainstTerrain=!0,n.Math.setRandomNumberSeed(3),this._Entity=new r["a"](n,this.viewer),this._Utils=new s["a"](n,this.viewer),this.start(),this.viewer.camera.setView({destination:n.Cartesian3.fromDegrees(123.43382736814452,41.811201240193164,3e3),orientation:{heading:n.Math.toRadians(0),pitch:n.Math.toRadians(-90),roll:0},duration:3})},start:function(){for(var n=this,t=this.cesium,e=[],i=0;i<20;i++){var o=this._Entity.createModel({id:Object(a["a"])(),uri:"/cesium-template/Vue/Entity/dynamicPosition/qiche.gltf",maximumScale:100,minimumPixelSize:30,heightReference:t.HeightReference.CLAMP_TO_GROUND});e.push(o)}this.ModelEntityArr=e,this.setPosition(),setInterval((function(){n.setPosition()}),2e4)},getRandomPoint:function(){var n=this._Utils.randomPoint({start:[123.43408676397446,41.81120812753955],end:[123.45099649125092,41.81138896519967],range:100});return n},getCallbackProperty:function(n,t){var e=this.cesium,i=0,o=new e.CallbackProperty((function(o){return i>5e3&&(i=0),i++,e.Cartesian3.lerp(n,t,i/500,new e.Cartesian3)}),!1);return o},setPosition:function(){for(var n=this.cesium,t=0;t<this.ModelEntityArr.length;t++){var e=this.ModelEntityArr[t],i="",o=this._Utils.getEntityPosition(e);i=o||this.getRandomPoint();var r=this.getRandomPoint(),s=this.getCallbackProperty(i,r);e.position=s,e.orientation=new n.VelocityOrientationProperty(s)}}}},c=u,d=(e("3c14"),e("cba8")),m=Object(d["a"])(c,i,o,!1,null,"8c10d43c",null);t["default"]=m.exports},"896e":function(n,t,e){"use strict";var i,o=new Uint8Array(16);function r(){if(!i&&(i="undefined"!==typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!==typeof msCrypto&&"function"===typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto),!i))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return i(o)}var s=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function a(n){return"string"===typeof n&&s.test(n)}for(var l=a,u=[],c=0;c<256;++c)u.push((c+256).toString(16).substr(1));function d(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=(u[n[t+0]]+u[n[t+1]]+u[n[t+2]]+u[n[t+3]]+"-"+u[n[t+4]]+u[n[t+5]]+"-"+u[n[t+6]]+u[n[t+7]]+"-"+u[n[t+8]]+u[n[t+9]]+"-"+u[n[t+10]]+u[n[t+11]]+u[n[t+12]]+u[n[t+13]]+u[n[t+14]]+u[n[t+15]]).toLowerCase();if(!l(e))throw TypeError("Stringified UUID is invalid");return e}var m=d;function f(n,t,e){n=n||{};var i=n.random||(n.rng||r)();if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,t){e=e||0;for(var o=0;o<16;++o)t[e+o]=i[o];return t}return m(i)}t["a"]=f},bc35:function(n,t,e){"use strict";var i=e("735b"),o=e("32da"),r=e("1c60");n.exports=function(n){var t=i(this),e=r(t),s=arguments.length,a=o(s>1?arguments[1]:void 0,e),l=s>2?arguments[2]:void 0,u=void 0===l?e:o(l,e);while(u>a)t[a++]=n;return t}},e143:function(n,t,e){"use strict";function i(n,t){for(var e=0;e<t.length;e++){var i=t[e];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(n,i.key,i)}}function o(n,t,e){return t&&i(n.prototype,t),e&&i(n,e),Object.defineProperty(n,"prototype",{writable:!1}),n}e.d(t,"a",(function(){return o}))},e9ff:function(n,t,e){}}]);