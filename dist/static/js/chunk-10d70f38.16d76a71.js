(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-10d70f38"],{"0c42":function(e,n,i){"use strict";i.r(n);var t=function(){var e=this,n=e.$createElement,i=e._self._c||n;return i("div",{staticClass:"container"},[i("div",{attrs:{id:"cesiumContainer"}}),i("el-button",{staticClass:"start",attrs:{type:"primary",plain:""},on:{click:e.start}},[e._v("绘制")])],1)},r=[],a=[{codeLanguage:"VUE",relyOn:[],code:[{codeLanguage:"html",content:'<template>\n                      <div class="container">\n                        <div id="cesiumContainer"></div>\n                        <el-button type="primary" plain class="start" @click="start">绘制</el-button>\n                      </div>\n                    </template>'},{codeLanguage:"js",content:'export default {\n                        data() {\n                          return {\n                            viewer: null,\n                            handler: null,//事件\n                            centerPoint: null,//中心点\n                            ellipsoidGather: null,//采集的球对象\n                          };\n                        },\n                        mounted() {\n                          this.init();\n                        },\n                        methods: {\n                          init() {\n                            const Cesium = this.cesium;\n                            Cesium.Ion.defaultAccessToken = process.env.VUE_APP_TOKEN;\n                            this.viewer = new Cesium.Viewer("cesiumContainer", {\n                              imageryProvider: new Cesium.ArcGisMapServerImageryProvider({\n                                url: "https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer",\n                              }),\n                              terrainProvider: new Cesium.CesiumTerrainProvider({\n                                //加载火星在线地形\n                                url: "http://data.marsgis.cn/terrain",\n                              }),\n                              shouldAnimate: true,\n                              infoBox: false,\n                              selectionIndicator: false,\n                            });\n                            //设置贴地效果\n                            this.viewer.scene.globe.depthTestAgainstTerrain = false;\n                          },\n                          /**\n                           * 开始\n                           *  */\n                          start() {\n                            const Cesium = this.cesium;\n                            const viewer = this.viewer;\n                      \n                            this.ellipsoidGather = null;\n                            //鼠标变成加号\n                            document.getElementById("cesiumContainer").style.cursor = "crosshair";\n                      \n                            //进制地图移动\n                            viewer.scene.screenSpaceCameraController.enableRotate = false;\n                            viewer.scene.screenSpaceCameraController.enableZoom = false;\n                            this.handler = new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas);\n                            //鼠标点击事件\n                            this.handler.setInputAction((event) => {\n                              //获取加载地形后对应的经纬度和高程：地标坐标\n                              var ray = viewer.camera.getPickRay(event.position);\n                              var cartesian = viewer.scene.globe.pick(ray, viewer.scene);\n                              //console.log("cartesian:", cartesian);\n                              if (!Cesium.defined(cartesian)) {\n                                return;\n                              }\n                              this.centerPoint = viewer.entities.add({\n                                name: \'centerPoint\',\n                                position: cartesian,\n                                point: {\n                                  color: Cesium.Color.CHARTREUSE.withAlpha(1),\n                                  pixelSize: 10,\n                                  heightReference: Cesium.HeightReference.CLAMP_TO_GROUND,\n                                  outlineColor: Cesium.Color.WHITE,\n                                  outlineWidth: 1\n                                }\n                              });\n                              // 轨迹球体\n                              this.ellipsoidGather = viewer.entities.add({\n                                position: cartesian,\n                                name: \'轨迹球体\',\n                                ellipsoid: {\n                                  maximumCone: Cesium.Math.PI_OVER_TWO,\n                                  radii: new Cesium.Cartesian3(0.1, 0.1, 0.1),\n                                  material: Cesium.Color.GREENYELLOW.withAlpha(0.5)\n                                }\n                              })\n                      \n                            }, Cesium.ScreenSpaceEventType.LEFT_DOWN);\n                      \n                      \n                            // 对鼠标移动事件的监听\n                            this.handler.setInputAction((event) => {\n                              if (this.centerPoint == null || this.ellipsoidGather == null) {\n                                return;\n                              }\n                              //获取加载地形后对应的经纬度和高程：地标坐标\n                              var ray = viewer.camera.getPickRay(event.endPosition);\n                              var radiusCartesian = viewer.scene.globe.pick(ray, viewer.scene);\n                              if (!radiusCartesian) {\n                                return;\n                              }\n                              var centerCartesian = this.centerPoint.position.getValue(Cesium.JulianDate.now());\n                              //计算移动点与中心点的距离（单位米）\n                              var centerTemp = viewer.scene.globe.ellipsoid.cartesianToCartographic(centerCartesian);\n                              var radiusTemp = viewer.scene.globe.ellipsoid.cartesianToCartographic(radiusCartesian);\n                              var geodesic = new Cesium.EllipsoidGeodesic();\n                              geodesic.setEndPoints(centerTemp, radiusTemp);\n                              var radius = geodesic.surfaceDistance;\n                              //console.log("radius",radius);\n                              //如果半径小于0,则不更新圆信息\n                              if (radius <= 0) {\n                                return;\n                              }\n                              this.ellipsoidGather.ellipsoid.radii = new Cesium.CallbackProperty(function (time, result) {\n                                return new Cesium.Cartesian3(radius, radius, radius);\n                              }, false);\n                            }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);\n                      \n                      \n                            // 对鼠标抬起事件的监听(结束点采集)\n                            this.handler.setInputAction((event) => {\n                              //鼠标变成默认\n                              document.getElementById("cesiumContainer").style.cursor = "default";\n                              //开始鼠标操作地图\n                              viewer.scene.screenSpaceCameraController.enableRotate = true;\n                              viewer.scene.screenSpaceCameraController.enableZoom = true;\n                              //移除地图鼠标点击事件\n                              this.handler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_DOWN)\n                              //移除地图鼠标移动事件\n                              this.handler.removeInputAction(Cesium.ScreenSpaceEventType.MOUSE_MOVE)\n                              //移除地图鼠标抬起事件\n                              this.handler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_UP)\n                              var ellipsoid = viewer.scene.globe.ellipsoid;\n                              var cartographic = ellipsoid.cartesianToCartographic(this.centerPoint.position.getValue(Cesium.JulianDate.now()));\n                              var lat = Cesium.Math.toDegrees(cartographic.latitude);\n                              var lng = Cesium.Math.toDegrees(cartographic.longitude);\n                              var height = cartographic.height;\n                              console.log("圆中心点：经度", lng + ",纬度：" + lat + ",高度：" + height);\n                              console.log("圆半径：", this.ellipsoidGather.ellipsoid.radii.getValue().x + "米");\n                              //如果圆半径小于0.5米则删除，防止出现默认为0.1米的被采集。该种情况则是用户取消圆采集\n                              if (this.ellipsoidGather.ellipsoid.radii.getValue().x < 0.5) {\n                                viewer.entities.remove(this.ellipsoidGather);\n                                this.ellipsoidGather = null;\n                              }\n                              //清除圆中心点和半径点\n                              viewer.entities.remove(this.centerPoint);\n                              this.centerPoint = null;\n                            }, Cesium.ScreenSpaceEventType.LEFT_UP);\n                      \n                          },\n                        },\n                      };'},{codeLanguage:"css",content:".container {\n                        width: 100%;\n                        height: 100%;\n                      \n                        #cesiumContainer {\n                          width: 100%;\n                          height: 100%;\n                        }\n                      \n                        .start {\n                          width: 100px;\n                          height: 40px;\n                          position: fixed;\n                          bottom: 10px;\n                          right: 10px;\n                        }\n                      }"}]}],s={data:function(){return{viewer:null,handler:null,centerPoint:null,ellipsoidGather:null}},created:function(){this.$store.dispatch("highlight/set_code",a)},mounted:function(){this.init()},methods:{init:function(){var e=this.cesium;e.Ion.defaultAccessToken=Object({NODE_ENV:"production",VUE_APP_BASE_API:"/prod-api",VUE_APP_GAODE_KEY_WEB_SERVICE:"181ced609de9d446207b55e549bafcb6",VUE_APP_GAODE_KEY_WEB_TERMINAL:"cb250acd7ee0e7b2049cb93747ae3d44",VUE_APP_PUBLIC_URL:"/cesium-template",VUE_APP_QINIU_URL:"http://re8r7gk9l.hb-bkt.clouddn.com",VUE_APP_SECURITY_JS_CODE:"2a0ce2005352672661417093c485a056",BASE_URL:"/cesium-template/"}).VUE_APP_TOKEN,this.viewer=new e.Viewer("cesiumContainer",{imageryProvider:new e.ArcGisMapServerImageryProvider({url:"https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer"}),terrainProvider:new e.CesiumTerrainProvider({url:"http://data.marsgis.cn/terrain"}),shouldAnimate:!0,infoBox:!1,selectionIndicator:!1}),this.viewer.scene.globe.depthTestAgainstTerrain=!1},start:function(){var e=this,n=this.cesium,i=this.viewer;this.ellipsoidGather=null,document.getElementById("cesiumContainer").style.cursor="crosshair",i.scene.screenSpaceCameraController.enableRotate=!1,i.scene.screenSpaceCameraController.enableZoom=!1,this.handler=new n.ScreenSpaceEventHandler(i.scene.canvas),this.handler.setInputAction((function(t){var r=i.camera.getPickRay(t.position),a=i.scene.globe.pick(r,i.scene);n.defined(a)&&(e.centerPoint=i.entities.add({name:"centerPoint",position:a,point:{color:n.Color.CHARTREUSE.withAlpha(1),pixelSize:10,heightReference:n.HeightReference.CLAMP_TO_GROUND,outlineColor:n.Color.WHITE,outlineWidth:1}}),e.ellipsoidGather=i.entities.add({position:a,name:"轨迹球体",ellipsoid:{maximumCone:n.Math.PI_OVER_TWO,radii:new n.Cartesian3(.1,.1,.1),material:n.Color.GREENYELLOW.withAlpha(.5)}}))}),n.ScreenSpaceEventType.LEFT_DOWN),this.handler.setInputAction((function(t){if(null!=e.centerPoint&&null!=e.ellipsoidGather){var r=i.camera.getPickRay(t.endPosition),a=i.scene.globe.pick(r,i.scene);if(a){var s=e.centerPoint.position.getValue(n.JulianDate.now()),o=i.scene.globe.ellipsoid.cartesianToCartographic(s),l=i.scene.globe.ellipsoid.cartesianToCartographic(a),c=new n.EllipsoidGeodesic;c.setEndPoints(o,l);var d=c.surfaceDistance;d<=0||(e.ellipsoidGather.ellipsoid.radii=new n.CallbackProperty((function(e,i){return new n.Cartesian3(d,d,d)}),!1))}}}),n.ScreenSpaceEventType.MOUSE_MOVE),this.handler.setInputAction((function(t){document.getElementById("cesiumContainer").style.cursor="default",i.scene.screenSpaceCameraController.enableRotate=!0,i.scene.screenSpaceCameraController.enableZoom=!0,e.handler.removeInputAction(n.ScreenSpaceEventType.LEFT_DOWN),e.handler.removeInputAction(n.ScreenSpaceEventType.MOUSE_MOVE),e.handler.removeInputAction(n.ScreenSpaceEventType.LEFT_UP);var r=i.scene.globe.ellipsoid,a=r.cartesianToCartographic(e.centerPoint.position.getValue(n.JulianDate.now())),s=n.Math.toDegrees(a.latitude),o=n.Math.toDegrees(a.longitude),l=a.height;console.log("圆中心点：经度",o+",纬度："+s+",高度："+l),console.log("圆半径：",e.ellipsoidGather.ellipsoid.radii.getValue().x+"米"),e.ellipsoidGather.ellipsoid.radii.getValue().x<.5&&(i.entities.remove(e.ellipsoidGather),e.ellipsoidGather=null),i.entities.remove(e.centerPoint),e.centerPoint=null}),n.ScreenSpaceEventType.LEFT_UP)}}},o=s,l=(i("5ecb"),i("cba8")),c=Object(l["a"])(o,t,r,!1,null,"182db7f0",null);n["default"]=c.exports},"5ecb":function(e,n,i){"use strict";i("d740")},d740:function(e,n,i){}}]);